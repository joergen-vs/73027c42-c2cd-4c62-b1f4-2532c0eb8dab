<?xml version="1.0" encoding="utf-8" standalone="no"?>
<xs:schema xmlns:addml="http://www.arkivverket.no/standarder/addml/v9"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
		   xmlns:xi="http://www.w3.org/2001/XInclude"
	targetNamespace="http://www.arkivverket.no/standarder/addml/v9" elementFormDefault="qualified"
	version="9.0">
	<xs:annotation>
		<xs:documentation xml:lang="en">
			Changes made in versions up to 8.2 are not documented in
			this document.
			Updated 2014-08-15 and 2014-09-29, Terje Pettersen-Dahl:
			Version 8.3:
			1. Element reference in dataset made optional.
			2. Optional possibility for header-lines.
			3. FieldDefinitionReference made unique within an instance.
			4. Created this documentation section.
		</xs:documentation>
		<xs:documentation xml:lang="en">
			Version 9.0:
			1. Changed all elements to complex- or simpletype, except root-element.
			2. Changed structure from specialised to object-oriented, where new objects may be implemented on abstract types.
			3. Clarification: All indices are 1-based.
			4. Locked down certain properties for objects, while allowing flexibility with 'additionalInfo'.
		</xs:documentation>
	</xs:annotation>

	<xs:element name="addml" type="addml:addml">
		<xs:annotation>
			<xs:documentation>C001</xs:documentation>
			<xs:documentation>Root-element for addml-document</xs:documentation>
		</xs:annotation>
		<xs:unique name="datasetName">
			<xs:selector xpath="addml:dataset"/>
			<xs:field xpath="@name"/>
		</xs:unique>
	</xs:element>

	<xs:complexType name="addml">
		<xs:sequence>
			<xs:element name="dataset" type="addml:dataset" maxOccurs="unbounded">

				<!-- Reference-keys -->
				<xs:key name="standardKey">
					<xs:selector xpath="addml:content/addml:standard"/>
					<xs:field xpath="@name"/>
				</xs:key>

				<!-- Reference-references -->
				<xs:keyref name="definition2StandardReference" refer="addml:standardKey">
					<xs:selector xpath=".//addml:definitions/addml:definition"/>
					<xs:field xpath="specification"/>
				</xs:keyref>

				<!-- File-keys -->
				<xs:key name="fileKey">
					<xs:selector xpath=".//addml:file"/>
					<xs:field xpath="@name"/>
				</xs:key>
				<xs:keyref name="schema2FileReference" refer="addml:fileKey">
					<xs:selector xpath=".//addml:schema"/>
					<xs:field xpath="addml:fileReference"/>
				</xs:keyref>

				<!-- Definition-keys -->
				<xs:key name="definitionKey">
					<xs:selector xpath=".//addml:definitions/*"/>
					<xs:field xpath="@name"/>
				</xs:key>

				<!-- Definition-references -->
				<xs:keyref name="container2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:container"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="file2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:file"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="group2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:group"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="field2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:field"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="attribute2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:attribute"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="codes2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:code"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="definition2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:definition/addml:relation"/>
					<xs:field xpath="definitionReference"/>
				</xs:keyref>
				<xs:keyref name="type2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:type"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="process2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:process"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
				<xs:keyref name="parameter2DefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//addml:parameter"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>

				<!-- Type-keys -->
				<xs:key name="typeKey">
					<xs:selector xpath=".//addml:structureTypes/addml:type"/>
					<xs:field xpath="@name"/>
				</xs:key>

				<!-- Type-references -->
				<xs:keyref name="fileTypeReference" refer="addml:typeKey">
					<xs:selector xpath=".//addml:file"/>
					<xs:field xpath="@typeReference"/>
				</xs:keyref>
				<xs:keyref name="groupTypeReference" refer="addml:typeKey">
					<xs:selector xpath=".//addml:group"/>
					<xs:field xpath="@typeReference"/>
				</xs:keyref>
				<xs:keyref name="fieldTypeReference" refer="addml:typeKey">
					<xs:selector xpath=".//addml:field"/>
					<xs:field xpath="@typeReference"/>
				</xs:keyref>
				<xs:keyref name="attributeTypeReference" refer="addml:typeKey">
					<xs:selector xpath=".//addml:attribute"/>
					<xs:field xpath="@typeReference"/>
				</xs:keyref>
				<xs:keyref name="typeDefinitionReference" refer="addml:definitionKey">
					<xs:selector xpath=".//structureTypes/type"/>
					<xs:field xpath="@definitionReference"/>
				</xs:keyref>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="addml:name" use="required"/>
	</xs:complexType>

	<!-- 1: Base-units -->

	<xs:complexType name="unit">
		<xs:annotation>
			<xs:documentation>C002</xs:documentation>
			<xs:documentation>Base unit for description</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="addml:description" minOccurs="0"
				maxOccurs="unbounded"/>
			<xs:element name="additionalProperties" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="property" type="addml:property" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="addml:name" use="required"/>
		<xs:attribute name="label" type="addml:label" use="optional"/>
	</xs:complexType>

	<xs:simpleType name="name">
		<xs:annotation>
			<xs:documentation>S001</xs:documentation>
			<xs:documentation>
				Identifying machine- or human-readable name of
				object
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="addml:defaultDataType"/>
	</xs:simpleType>

	<xs:simpleType name="label">
		<xs:annotation>
			<xs:documentation>S002</xs:documentation>
			<xs:documentation>Human-readable name of object</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:complexType name="description">
		<xs:annotation>
			<xs:documentation>C003</xs:documentation>
			<xs:documentation>Description of unit</xs:documentation>
			<xs:documentation>No topic-attribute defines "What is.."</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="addml:defaultDataType">
				<xs:attribute name="topic" type="addml:topic" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:simpleType name="topic">
		<xs:annotation>
			<xs:documentation>S003</xs:documentation>
			<xs:documentation>Topic for description, single word of phrase</xs:documentation>
			<xs:documentation>Ex: 'Usage', 'History', 'Comments'</xs:documentation>
		</xs:annotation>
		<xs:restriction base="addml:defaultDataType"/>
	</xs:simpleType>

	<xs:complexType name="property">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:choice minOccurs="0">
						<xs:element name="value" type="addml:value"/>
						<xs:element name="object" type="addml:object"/>
					</xs:choice>
					<xs:element name="property" type="addml:property" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="namespace" type="addml:defaultDataType">
					<xs:annotation>
						<xs:documentation>Reference to a collection of properties</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="dataType" type="addml:defaultDataType">
					<xs:annotation>
						<xs:documentation>Datatype of the property.value</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="format" type="addml:defaultDataType">
					<xs:annotation>
						<xs:documentation> of the property.value</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="value">
		<xs:annotation>
			<xs:documentation>Value of object</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:complexType name="object">
		<xs:annotation>
			<xs:documentation></xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any namespace="##any" maxOccurs="unbounded" processContents="lax"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="elementUnit">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="additionalElements" type="addml:additionalElements" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="additionalElements">
		<xs:sequence>
			<xs:element name="additionalElement" type="addml:elementUnit" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:attributeGroup name="referenceModelProperties">
		<xs:attribute name="definitionReference" type="addml:definitionReference" use="required"/>
		<xs:attribute name="typeReference" type="addml:typeReference" use="optional"/>
	</xs:attributeGroup>

	<xs:simpleType name="definitionReference">
		<xs:annotation>
			<xs:documentation>
				Reference to definition-object which contains the description of the
				file.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="addml:defaultDataType"/>
	</xs:simpleType>

	<xs:simpleType name="typeReference">
		<xs:annotation>
			<xs:documentation>
				Reference to types-object which contains how the file is
				read.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="addml:defaultDataType"/>
	</xs:simpleType>

	<xs:complexType name="resource">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:choice>
						<xs:element name="link" type="xs:anyURI">
							<xs:annotation>
								<xs:documentation>
									Relative path to resource included in
									dataset
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- 1: Top-level per dataset -->

	<xs:complexType name="dataset">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="reference" type="addml:reference" minOccurs="0"/>
					<xs:element name="structure" type="addml:structure"/>
					<xs:element name="definitions" type="addml:definitions" minOccurs="0">
						<xs:annotation>
							<xs:documentation>How to understand information</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="structureTypes" type="addml:structureTypes" minOccurs="0">
						<xs:annotation>
							<xs:documentation>How to read information</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="processes" type="addml:processes" minOccurs="0">
						<xs:annotation>
							<xs:documentation>How to review information</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- 2: Reference -->

	<xs:complexType name="reference">
		<xs:sequence>
			<xs:element name="context" type="addml:context" minOccurs="0"/>
			<xs:element name="content" type="addml:content" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="context">
		<xs:sequence>
			<xs:element name="description" type="addml:description" minOccurs="0"
				maxOccurs="unbounded"/>
			<xs:element name="additionalElements" type="addml:additionalElements" minOccurs="0"/>
			<xs:element name="contextElement" type="addml:contextElement" minOccurs="0"
				maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="contextElement">
		<xs:complexContent>
			<xs:extension base="addml:elementUnit"/>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="agent">
		<xs:complexContent>
			<xs:extension base="addml:contextElement">
				<xs:sequence>
					<xs:element name="role" type="addml:role"> </xs:element>
					<xs:element name="otherrole" type="addml:defaultDataType" minOccurs="0"/>
					<xs:element name="resource" type="addml:resource" minOccurs="0"
						maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="organization">
		<xs:complexContent>
			<xs:extension base="addml:agent">
				<xs:sequence>
					<xs:element name="orgnr" type="addml:defaultDataType" minOccurs="0"/>
					<xs:element name="operationalPeriod" type="addml:StartAndEndDates"/>
					<xs:element name="contact" type="addml:individual" minOccurs="0"
						maxOccurs="unbounded"/>
					<xs:element name="software" type="addml:software" minOccurs="0"
						maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="role">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CREATOR"/>
			<xs:enumeration value="EDITOR"/>
			<xs:enumeration value="ARCHIVIST"/>
			<xs:enumeration value="PRESERVATION"/>
			<xs:enumeration value="DISSEMINATOR"/>
			<xs:enumeration value="CUSTODIAN"/>
			<xs:enumeration value="IPOWNER"/>
			<xs:enumeration value="OTHER"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="individual">
		<xs:complexContent>
			<xs:extension base="addml:agent">
				<xs:sequence>
					<xs:element name="software" type="addml:software" minOccurs="0"
						maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="software">
		<xs:complexContent>
			<xs:extension base="addml:agent">
				<xs:sequence>
					<xs:element name="title" type="addml:defaultDataType"/>
					<xs:element name="version" type="addml:versionDataType" minOccurs="0"/>
					<xs:element name="type" type="addml:defaultDataType"/>
					<xs:element name="operationalPeriod" type="addml:StartAndEndDates"/>
					<xs:element name="lastUpdated" type="addml:dateDataType">
						<xs:annotation>
							<xs:documentation>Last time software was updated / modified</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="replacedBy" type="addml:defaultDataType">
						<xs:annotation>
							<xs:documentation>When replacing software used on the same data, ex:</xs:documentation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="subjects" type="addml:defaultDataType" minOccurs="0" maxOccurs="unbounded"
					/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="StartAndEndDates">
		<xs:sequence>
			<xs:element name="startDate" type="addml:dateDataType"/>
			<xs:element name="endDate" type="addml:dateDataType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="content">
		<xs:sequence>
			<xs:element name="description" type="addml:description" minOccurs="0"
				maxOccurs="unbounded"/>
			<xs:element name="additionalElements" type="addml:additionalElements" minOccurs="0"/>
			<xs:element name="contentElement" type="addml:contentElement" minOccurs="0"
				maxOccurs="unbounded"/>
			<xs:element name="comments" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="comment" type="addml:comment" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="contentElement">
		<xs:complexContent>
			<xs:extension base="addml:elementUnit"/>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="documentationElement">
		<xs:complexContent>
			<xs:extension base="addml:contentElement">
				<xs:sequence>
					<xs:element name="title" type="addml:defaultDataType">
						<xs:annotation>
							<xs:documentation>Formal name of documentation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="version" type="addml:versionDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Version of the archived
								documentation
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resource" type="addml:resource" minOccurs="0"
						maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Source of documentation</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="extractionElement">
		<xs:complexContent>
			<xs:extension base="addml:contentElement">
				<xs:sequence>
					<xs:element name="type" type="addml:defaultDataType">
						<xs:annotation>
							<xs:documentation>Extraction-classification, </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="version" type="addml:versionDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="comment">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:contentElement">
				<xs:sequence>
					<xs:element name="value" type="addml:value"/>
					<xs:element name="regarding" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to base-unit</xs:documentation>
							<xs:documentation>
								Ex: value='Testing fails due to missing documents'
								regarding 'reference to process' and 'reference to folder with documents'
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!--
	A place for referenced specifications in reference/content 
	
	specification*
		@name = name used for referencing, like 'ISO-8859-1' or 'Noark 5'
		description = Short description of specification
		p:name: Full name
		p:version? = Handling versioning of specification
		p:source+ = Sources of specification. Either a url or filepath
	-->

	<!-- Structures -->

	<xs:complexType name="structure">
		<xs:sequence>
			<xs:element name="container" type="addml:containerObject" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Where to find information</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<!-- Abstract, do not use -->
	<xs:complexType name="containerObject">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:group ref="addml:containerProperties"/>
				</xs:sequence>
				<xs:attribute name="definitionReference" type="addml:defaultDataType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="extraction">
		<xs:annotation>
			<xs:documentation>
				Root-catalog for files and folders making up an +extraction of archival
				data from regular data.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:containerObject">
				<xs:sequence>
					<xs:group ref="addml:archivalExtractionProperties"/>
					<xs:group ref="addml:archivalExtractionObjects"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="files">
		<xs:annotation>
			<xs:documentation>
				File-catalog for files and folders not yet
				described
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:containerObject">
				<xs:sequence>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="file" type="addml:fileObject"/>
						<xs:element name="folder" type="addml:folderObject"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:group name="containerProperties">
		<xs:annotation>
			<xs:documentation>Abstract type for all 'packages' of information.</xs:documentation>
			<xs:documentation>Archival extraction, File structure, etc..</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="version" type="addml:versionDataType" minOccurs="0"/>
		</xs:sequence>
	</xs:group>

	<xs:group name="archivalExtractionProperties">
		<xs:annotation>
			<xs:documentation>Archive-properties.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="period">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="startDate" type="addml:dateDataType">
							<xs:annotation>
								<xs:documentation>
									Date when the archive or part of is put into
									active use
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="inboundPeriod" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Indicate whether information created before
									start-date is included.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="soft"/>
									<xs:enumeration value="sharp"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="endDate" type="addml:dateDataType">
							<xs:annotation>
								<xs:documentation>Date when the archive or part of is taken out of active use</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="outgoingPeriod" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Indicate whether information created after
									end-date is included.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="soft"/>
									<xs:enumeration value="sharp"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="containsScreenedInformation" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						True or false: Are there metadata in the archive which is
						screened?
					</xs:documentation>
					<xs:documentation>
						Relevant for archives implementing
						screening.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="containsDocumentsWhichIsDisposed" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						True or False: Are there documents in the archive which is
						disposed?
					</xs:documentation>
					<xs:documentation>
						Relevant for archives implementing
						disposal.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="containsDocumentsScheduledForDisposal" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						True or False: Are there documents in the archive which is
						scheduled for disposal?
					</xs:documentation>
					<xs:documentation>
						Relevant for archives implementing
						disposal.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="archivalExtractionObjects">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded">
				<xs:element name="file" type="addml:fileObject">
					<xs:key name="groupKeyInFile">
						<xs:selector xpath=".//addml:group"/>
						<xs:field xpath="@name"/>
					</xs:key>
				</xs:element>
				<xs:element name="folder" type="addml:folderObject">
					<xs:key name="groupKeyInFolder">
						<xs:selector xpath=".//addml:group"/>
						<xs:field xpath="@name"/>
					</xs:key>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>

	<xs:complexType name="fileObject">
		<xs:annotation>
			<xs:documentation>A basic file</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:group ref="addml:fileProperties"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="dataFile">
		<xs:annotation>
			<xs:documentation>
				A file containing readable data [not yet described] or
				metadata.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:fileObject">
				<xs:attribute name="definitionReference" type="addml:definitionReference"
					use="required"/>
				<xs:attribute name="typeReference" type="addml:typeReference" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fixedFile">
		<xs:complexContent>
			<xs:extension base="addml:dataFile">
				<xs:sequence>
					<xs:group ref="addml:fixedFileProperties"/>
					<xs:element name="group" type="addml:groupObject" />
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="group" type="addml:groupObject" />
						<xs:element name="groupRef" type="addml:groupObject">
							<xs:annotation>
								<xs:documentation>Group referenced inside the hiearchy. Placed along the root-group for cycle-free references.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="delimitedFile">
		<xs:complexContent>
			<xs:extension base="addml:dataFile">
				<xs:sequence>
					<xs:group ref="addml:delimitedFileProperties"/>
					<xs:element name="group" type="addml:groupObject" />
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="group" type="addml:groupObject" />
						<xs:element name="groupRef" type="addml:groupObject">
							<xs:annotation>
								<xs:documentation>Group referenced inside the hiearchy. Placed along the root-group for cycle-free references.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="xmlFile">
		<xs:complexContent>
			<xs:extension base="addml:dataFile">
				<xs:sequence>
					<xs:group ref="addml:xmlFileProperties"/>
					<xs:choice>
						<xs:sequence>
							<xs:element name="group" type="addml:groupObject"/>
							<xs:choice minOccurs="0" maxOccurs="unbounded">
								<xs:element name="groupRef" type="addml:groupObject">
									<xs:annotation>
										<xs:documentation>Group referenced inside the hiearchy. Placed along the root-group for cycle-free references.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="field" type="addml:fieldObject">
									<xs:annotation>
										<xs:documentation>Single-element xml-file</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:choice>
						</xs:sequence>
						<xs:element name="field" type="addml:fieldObject">
							<xs:annotation>
								<xs:documentation>Single-element xml-file</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:group name="fileProperties">
		<xs:annotation>
			<xs:documentation>Properties applicable to all files.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="path" type="addml:defaultDataType">
				<xs:annotation>
					<xs:documentation>Path, to file relative to the addml-file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="checksum">
				<xs:annotation>
					<xs:documentation>
						Contains the algorithm and value of file
						checksum-calculation.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="addml:defaultDataType">
							<xs:attribute name="algorithm" type="addml:defaultDataType" default="SHA-256">
								<xs:annotation>
									<xs:documentation>Checksum-algorithm used for calculation.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="fixedFileProperties">
		<xs:sequence>
			<xs:group ref="addml:numberOfOccurrences"/>
			<xs:element name="IdentifyingFields" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Field-index or indices identifying type of
						group.
					</xs:documentation>
					<xs:documentation>
						Obligatory when file contains multiple
						groups.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="fieldIndex" type="xs:nonNegativeInteger"
							maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Index of field in group</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="numberOfOccurrences">
		<xs:sequence>
			<xs:element name="numberOfOccurrences" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Number of occurrences per group identified in file or total
						number of groups in file
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="value" type="xs:nonNegativeInteger">
							<xs:annotation>
								<xs:documentation>Number of occurrences</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="reference" type="addml:defaultDataType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Reference to group in file.</xs:documentation>
								<xs:documentation>
									When reference is not used, the value defines the
									total number of groups in file.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="delimitedFileProperties">
		<xs:sequence>
			<xs:group ref="addml:numberOfOccurrences"/>
			<xs:element name="IdentifyingFields" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Field-index or indices identifying type of
						group.
					</xs:documentation>
					<xs:documentation>
						Obligatory when file contains multiple
						groups.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="fieldIndex" type="xs:nonNegativeInteger"
							maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Index of field in group</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="xmlFileProperties">
		<xs:sequence>
			<xs:group ref="addml:numberOfOccurrences"/>
			<xs:element name="targetNamespace" type="addml:defaultDataType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Reference to the main namespace of the
						xml-file.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="schemas">
				<xs:annotation>
					<xs:documentation>
						Connects one or more validation-files to a
						xml-file.
					</xs:documentation>
					<xs:documentation>
						First xml-schema is designated 'main'. Also the one possibly
						missing prefix.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="schema" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Connects a validation-file to a xml-file.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="namespace" type="addml:defaultDataType">
										<xs:annotation>
											<xs:documentation>Reference to the namespace of the xml-schema.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="prefix" type="addml:defaultDataType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Prefix of the namespace of the xml-schema in main schema.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="fileReference" type="addml:defaultDataType">
										<xs:annotation>
											<xs:documentation>Reference to the file to validate the xml-file against.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="root" type="addml:defaultDataType">
				<xs:annotation>
					<xs:documentation>Reference to root-element of xml-file,</xs:documentation>
					<xs:documentation>Either a group or single element</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:complexType name="groupObject">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="attribute" type="addml:attributeObject" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attributeGroup ref="addml:referenceModelProperties"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fixedGroup">
		<xs:annotation>
			<xs:documentation>TODO</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:groupObject">
				<xs:sequence>
					<xs:element name="IdentifyingFieldValues" type="addml:IdentifyingFieldValues"
						minOccurs="0"/>
					<xs:element name="length" type="xs:nonNegativeInteger">
						<xs:annotation>
							<xs:documentation>Length of fixed post</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:group ref="addml:fixedGroupObjects"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="IdentifyingFieldValues">
		<xs:annotation>
			<xs:documentation>Values identifying type of group.</xs:documentation>
			<xs:documentation>Obligatory when file contains multiple groups</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="fieldValue" type="addml:value" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Field-value</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="delimitedGroup">
		<xs:annotation>
			<xs:documentation>TODO</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:groupObject">
				<xs:sequence>
					<!-- Delimited-group properties -->
					<xs:element name="IdentifyingFieldValues" type="addml:IdentifyingFieldValues"
						minOccurs="0"/>
					<xs:element name="headerLevel" type="xs:nonNegativeInteger" minOccurs="0"
						maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Index or indices of group containing
								header-information
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<!-- Delimited-group objects -->
					<xs:choice maxOccurs="unbounded">
						<xs:element name="field" type="addml:delimitedField"/>
						<xs:element name="groupReference" type="addml:defaultDataType">
							<xs:annotation>
								<xs:documentation>
									Reference to a group located inside current
									fileobject.
								</xs:documentation>
								<xs:documentation>May use different group-type.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="xmlGroup">
		<xs:annotation>
			<xs:documentation>TODO</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:groupObject">
				<xs:sequence>
					<xs:group ref="addml:xmlGroupProperties"/>
					<xs:group ref="addml:xmlGroupObjects"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:group name="fixedGroupProperties">
		<xs:sequence>
			<xs:element name="IdentifyingFieldValues" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Values identifying type of group.</xs:documentation>
					<xs:documentation>
						Obligatory when file contains multiple
						groups
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="fieldValue" type="addml:defaultDataType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Field-value</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="length" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="fixedGroupObjects">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded">
				<xs:element name="field" type="addml:fixedField"/>
				<xs:element name="groupReference" type="addml:defaultDataType">
					<xs:annotation>
						<xs:documentation>Reference to a group located inside current object.</xs:documentation>
						<xs:documentation>May use different group-type.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>

	<xs:group name="delimitedGroupProperties">
		<xs:sequence>
			<xs:element name="IdentifyingFieldValues" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Values identifying type of group.</xs:documentation>
					<xs:documentation>
						Obligatory when file contains multiple
						groups.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="fieldValue" type="addml:defaultDataType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Field-value</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="headerLevel" type="xs:nonNegativeInteger" minOccurs="0"
				maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Index or indices of group containing
						header-information
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="xmlGroupProperties">
		<xs:sequence>
			<xs:element name="elementName" type="addml:defaultDataType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Element-name.</xs:documentation>
					<xs:documentation>No name if grouping of elements.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderedBy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Group is defined in schema-instance
						type-attribute
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="all">
							<xs:annotation>
								<xs:documentation>https://www.w3.org/TR/xmlschema11-1/#element-all</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="choice">
							<xs:annotation>
								<xs:documentation>https://www.w3.org/TR/xmlschema11-1/#element-choice</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="sequence">
							<xs:annotation>
								<xs:documentation>https://www.w3.org/TR/xmlschema11-1/#element-sequence</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:group name="xmlGroupObjects">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded">
				<xs:element name="field">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="addml:xmlField">
								<xs:attributeGroup ref="addml:MinMaxAttributes"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="groupReference">
					<xs:annotation>
						<xs:documentation>Reference to a group located inside a current object.</xs:documentation>
						<xs:documentation>May use different group-type.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="addml:defaultDataType">
								<xs:attributeGroup ref="addml:MinMaxAttributes"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="group">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="addml:groupObject">
								<xs:attributeGroup ref="addml:MinMaxAttributes"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>

	<xs:attributeGroup name="MinMaxAttributes">
		<xs:attribute name="min" default="1">
			<xs:annotation>
				<xs:documentation>Minimum, from 0 up.</xs:documentation>
				<xs:documentation>0 = null-able,</xs:documentation>
				<xs:documentation>1 = Default</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:nonNegativeInteger"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="max" default="1">
			<xs:annotation>
				<xs:documentation>Maximum, from 1 up, included 'unbounded'.</xs:documentation>
				<xs:documentation>1 = Default,</xs:documentation>
				<xs:documentation>'unbounded' = No specific limit / '1 or more'</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:union>
					<xs:simpleType>
						<xs:restriction base="xs:nonNegativeInteger"/>
					</xs:simpleType>
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="unbounded"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:union>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>

	<xs:complexType name="fieldObject">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="unique" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
						<xs:complexType/>
					</xs:element>
					<xs:element name="notNull" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
						<xs:complexType/>
					</xs:element>
					<xs:element name="nullValues" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="nullValue" type="xs:string" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="attribute" type="addml:attributeObject" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="code" type="addml:codeObject" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attributeGroup ref="addml:referenceModelProperties"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fixedField">
		<xs:complexContent>
			<xs:extension base="addml:fieldObject">
				<xs:sequence>
					<xs:element name="startPos" type="xs:nonNegativeInteger">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:choice>
						<xs:element name="endPos" type="xs:nonNegativeInteger">
							<xs:annotation>
								<xs:documentation/>
							</xs:annotation>
						</xs:element>
						<xs:element name="fixedLength" type="xs:nonNegativeInteger">
							<xs:annotation>
								<xs:documentation/>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="delimitedField">
		<xs:complexContent>
			<xs:extension base="addml:fieldObject">
				<xs:sequence>
					<xs:element name="minLength" type="xs:nonNegativeInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxLength" type="xs:nonNegativeInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="xmlField">
		<xs:complexContent>
			<xs:extension base="addml:fieldObject">
				<xs:sequence>
					<xs:element name="elementName" type="addml:defaultDataType">
						<xs:annotation>
							<xs:documentation>Element-name</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="prefix" type="addml:defaultDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Namespace-shorthand in element-name</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="codeObject">
		<xs:annotation>
			<xs:documentation>Coded value in a field.</xs:documentation>
			<xs:documentation>Ex. 0, 1 or A, B, C</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="definitionReference" type="addml:definitionReference"
					use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="attributeObject">
		<xs:annotation>
			<xs:documentation>Information to understand the group or field.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="code" type="addml:codeObject" minOccurs="0"
						maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attributeGroup ref="addml:referenceModelProperties"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="xmlAttribute">
		<xs:complexContent>
			<xs:extension base="addml:attributeObject">
				<xs:sequence>
					<xs:element name="prefix" type="addml:defaultDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Namespace-shorthand in element-name</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="folderObject">
		<xs:annotation>
			<xs:documentation>Basic folder</xs:documentation>
			<xs:documentation>References significant files or folders</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="path" type="addml:name">
						<xs:annotation>
							<xs:documentation>Path to folder relative to the addml-file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="content">
						<xs:annotation>
							<xs:documentation>Type of content in folder.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="DATAFILES"/>
								<xs:enumeration value="DOCUMENTATION"/>
								<xs:enumeration value="DOCUMENTS"/>
								<xs:enumeration value="REPORTS"/>
								<xs:enumeration value="OTHER"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="numberOfOccurrences">
						<xs:annotation>
							<xs:documentation>Number of files recursively in folder, based on extension. All files available with filepath equal to '.*'.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="filepath" type="addml:defaultDataType">
									<xs:annotation>
										<xs:documentation>Regex filename+extension</xs:documentation>
										<xs:documentation>Ex. *.*, *.xml</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="value" type="xs:nonNegativeInteger">
									<xs:annotation>
										<xs:documentation>Number of files</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Files or subfolders. TODO:why</xs:documentation>
						</xs:annotation>
						<xs:element name="file" type="addml:fileObject"/>
						<xs:element name="folder" type="addml:folderObject"/>
					</xs:choice>
				</xs:sequence>
				<xs:attributeGroup ref="addml:referenceModelProperties"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Definitions -->

	<xs:complexType name="definitions">
		<xs:choice maxOccurs="unbounded">
			<xs:element name="catalog" type="addml:definitionCatalog"/>
			<xs:element name="definition" type="addml:definitionUnit"/>
			<xs:element name="key" type="addml:definitionKey"/>
			<xs:element name="view" type="addml:definitionView"/>
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="definitionCatalog">
		<xs:attribute name="name" type="addml:name" use="required"/>
		<xs:attribute name="fileReference" type="addml:defaultDataType" use="required">
			<xs:annotation>
				<xs:documentation>Reference to the file containing additional definitions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="definitionUnit">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="version" type="addml:versionDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Connected to variantOf, displaying a specific iteration of a definition</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="documentation" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Documentation in reference/content</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="resource" type="xs:anyURI" minOccurs="0"
									maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation/>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
							<xs:attribute name="reference">
								<xs:annotation>
									<xs:documentation>
										Reference to documentation in
										reference-section
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:complexType>
					</xs:element>
					<xs:element name="incomplete" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Shows if a object is described in full or
								partially
							</xs:documentation>
						</xs:annotation>
						<xs:complexType/>
					</xs:element>
					<xs:element name ="relation" type="addml:relation" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="typeReference" type="addml:typeReference">
					<xs:annotation>
						<xs:documentation>Specifies an expected format.</xs:documentation>
						<xs:documentation>Ex: A standard specifying files to be of xml-format</xs:documentation>
						<xs:documentation>Ex: Field with boolean value True and False, while definition uses 1 and 0, uses different structureTypes, but will be transform-able, due to being read as boolean values.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="relation">
		<xs:sequence>
			<xs:element name="concept" type="addml:conceptDataValue">
				<xs:annotation>
					<xs:documentation>Description of the relation between definitions</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="definitionReference" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Linking relations between definitions</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="addml:defaultDataType"/>
					<xs:attributeGroup ref="addml:MinMaxAttributes"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="conceptDataValue">
		<xs:annotation>
			<xs:documentation>
				Consists of a small structural ontology, along with validating against others.
			
				Duplicate a simpleType with enumeration-values and edit for ontologies for documentation-purposes.</xs:documentation>
		</xs:annotation>
		<xs:union>
			<!--  -->
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="subTypeOf">
						<xs:annotation>
							<xs:documentation>Reference to subtype of definition.</xs:documentation>
							<xs:documentation>Ex: (a, b) is subtype of (a, b, c*) [Missing field/group]</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="superTypeOf">
						<xs:annotation>
							<xs:documentation>Reference to supertype of definition.</xs:documentation>
							<xs:documentation>Ex: (a, b) is supertype of (a, b, c) [Extra field/group]</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="variantOf">
						<xs:annotation>
							<xs:documentation>Reference to variant of definition.</xs:documentation>
							<xs:documentation>Ex: (a, b, c) is variant of (a, b, c*) [Different restraints on same field/group]</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="hasFile">
						<xs:annotation>
							<xs:documentation>Definition contains one or more file</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="hasFolder">
						<xs:annotation>
							<xs:documentation>Definition contains one or folders</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="hasGroup">
						<xs:annotation>
							<xs:documentation>Definition contains one or groups</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="hasField">
						<xs:annotation>
							<xs:documentation>Definition contains one or fields</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="hasCode">
						<xs:annotation>
							<xs:documentation>Definition contains one or code-values</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="hasKey">
						<xs:annotation>
							<xs:documentation>Definition contains one or keys</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:annotation>
					<xs:documentation>Allows the declaration of other ontologies.</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:pattern value=".+" />
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>

	<xs:complexType name="definitionKey">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:choice>
						<xs:element name="primaryKey">
							<xs:complexType/>
						</xs:element>
						<xs:element name="alternateKey">
							<xs:complexType/>
						</xs:element>
						<xs:element name="foreignKey">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="definitionReference" type="addml:valueAsAttribute" maxOccurs="unbounded"/>
									<xs:element name="fields">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="definitionReference" type="addml:valueAsAttribute" maxOccurs="unbounded"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="relationType" type="addml:relationDataType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:choice>
					<xs:element name="definitionReference" type="addml:valueAsAttribute" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="fields">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="definitionReference" type="addml:valueAsAttribute" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="definitionView">
		<xs:annotation>
			<xs:documentation>Defines information independent of structural limits (partials, joined, value-dependent..)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:definitionUnit">
				<xs:sequence>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Types -->

	<xs:complexType name="structureTypes">
		<xs:sequence>
			<xs:element name="type" type="addml:typeUnit" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="typeUnit">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:attribute name="definitionReference" type="addml:definitionReference"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="dataFileType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:element name="format" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="name" type="addml:defaultDataType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="charset" type="addml:charset"/>
					<xs:element name="charDefinitions" type="addml:charDefinitions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fixedFileType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:element name="format">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="name" type="addml:defaultDataType" fixed="FIXED"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="charset" type="addml:charset"/>
					<xs:element name="charDefinitions" type="addml:charDefinitions" minOccurs="0"/>
					<xs:element name="recordSeparator" type="addml:recordSeparator" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="delimitedFileType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:element name="format">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="name" type="addml:defaultDataType" default="CSV"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="charset" type="addml:charset"/>
					<xs:element name="charDefinitions" type="addml:charDefinitions" minOccurs="0"/>
					<xs:element name="recordSeparator" type="addml:recordSeparator"/>
					<xs:element name="fieldSeparator" type="addml:fieldSeparator"/>
					<xs:element name="quotingChar" type="addml:defaultDataType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="xmlFileType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:element name="format">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="name" type="addml:defaultDataType" fixed="XML"/>
								<xs:element name="version" type="addml:versionDataType" default="1.0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="charset" type="addml:charset"/>
					<xs:element name="charDefinitions" type="addml:charDefinitions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fixedGroupType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:element name="format" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="name" type="addml:defaultDataType" fixed="FIXED"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="charset" type="addml:charset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="charDefinitions" type="addml:charDefinitions" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="recordSeparator" type="addml:recordSeparator" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="trimmed" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
						<xs:complexType/>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="delimitedGroupType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:element name="format" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="name" default="CSV">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="CSV">
												<xs:annotation>
													<xs:documentation>
														Comma-separated values, that
														uses a comma to separate
														values.
													</xs:documentation>
												</xs:annotation>
											</xs:enumeration>
											<xs:enumeration value="DSV">
												<xs:annotation>
													<xs:documentation>
														Custom delimited file format,
														using custom characters for separation and
														quotation.
													</xs:documentation>
												</xs:annotation>
											</xs:enumeration>
											<xs:enumeration value="TSV">
												<xs:annotation>
													<xs:documentation>
														Tabular-separated values, that
														uses a tab to separate values.
													</xs:documentation>
												</xs:annotation>
											</xs:enumeration>
										</xs:restriction>
									</xs:simpleType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="charset" type="addml:charset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="charDefinitions" type="addml:charDefinitions" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="recordSeparator" type="addml:recordSeparator" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="fieldSeparator" type="addml:defaultDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="quotingChar" type="addml:defaultDataType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="trimmed">
						<xs:annotation>
							<xs:documentation>Overrides parent-properties</xs:documentation>
						</xs:annotation>
						<xs:complexType/>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="xmlGroupType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:element name="groupModel">
						<xs:annotation>
							<xs:documentation></xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="sequence">
									<xs:annotation>
										<xs:documentation>Ordered fields</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="choice">
									<xs:annotation>
										<xs:documentation>Choice of one field</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="all">
									<xs:annotation>
										<xs:documentation>All fields in any order, with zero or one occurence</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="fieldType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:group ref="addml:fieldTypeProperties"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:group name="fieldTypeProperties">
		<xs:sequence>
			<xs:element name="dataType" type="addml:defaultDataType">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:element>
			<xs:element name="fieldFormat" type="addml:fieldFormat" minOccurs="0"/>
			<xs:element name="alignment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Aligns content to left, center or right.</xs:documentation>
					<xs:documentation>TODO: Should it be defined here, or not?</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="right"/>
						<xs:enumeration value="left"/>
						<xs:enumeration value="center"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="padChar" type="addml:defaultDataType" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:element>
			<xs:element name="packType" type="addml:defaultDataType" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:element>
			<xs:element name="nullValues" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="nullValue" type="xs:string" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>

	<xs:complexType name="attributeType">
		<xs:complexContent>
			<xs:extension base="addml:typeUnit">
				<xs:sequence>
					<xs:group ref="addml:fieldTypeProperties"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="fileTypeFormat">
		<xs:restriction base="xs:string">
			<xs:enumeration value="FIXED">
				<xs:annotation>
					<xs:documentation>
						Fixed-length values, may or may not use
						record-separator.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CSV">
				<xs:annotation>
					<xs:documentation>
						Comma-separated values, that uses a comma to separate
						values.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TSV">
				<xs:annotation>
					<xs:documentation>
						Tabular-separated values, that uses a tab to separate
						values.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DSV">
				<xs:annotation>
					<xs:documentation>
						Custom delimited file format, using custom characters for
						separation and quotation.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="XML">
				<xs:annotation>
					<xs:documentation>Extensible Markup Language (XML).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:pattern value=".+">
				<xs:annotation>
					<xs:documentation>Other, yet to be specified</xs:documentation>
				</xs:annotation>
			</xs:pattern>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="charset">
		<xs:union>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="UTF-8">
						<xs:annotation>
							<xs:documentation>Unicode is a variable-length character encoding standard, and UTF-8 represents characters between 1 and 4 byte.</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="OTHER">
						<xs:annotation>
							<xs:documentation>No identifiable charset</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value=".+">
						<xs:annotation>
							<xs:documentation>Other, yet to be specified</xs:documentation>
						</xs:annotation>
					</xs:pattern>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>

	<xs:simpleType name="recordSeparator">
		<xs:union>
			<xs:simpleType>
				<xs:restriction base="addml:defaultDataType">
					<xs:enumeration value="CR">
						<xs:annotation>
							<xs:documentation>Carriage Return</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="LF">
						<xs:annotation>
							<xs:documentation>Line Feed</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="CRLF">
						<xs:annotation>
							<xs:documentation>Combination</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:restriction base="addml:defaultDataType">
					<xs:pattern value=".+">
						<xs:annotation>
							<xs:documentation>Custom</xs:documentation>
						</xs:annotation>
					</xs:pattern>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>

	<xs:simpleType name="fieldSeparator">
		<xs:restriction base="xs:string">
			<xs:pattern value=".+">
				<xs:annotation>
					<xs:documentation>Custom</xs:documentation>
				</xs:annotation>
			</xs:pattern>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="charDefinitions">
		<xs:sequence>
			<xs:element name="charDefinition" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="fromChar">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute name="format" type="addml:defaultDataType">
											<xs:annotation>
												<xs:documentation>Enables different ways of representing the character</xs:documentation>
												<xs:documentation>'text', 'hex' or similar</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="toChar">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute name="format" type="addml:defaultDataType">
											<xs:annotation>
												<xs:documentation>Enables different ways of representing the character</xs:documentation>
												<xs:documentation>'text', 'hex' or similar</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<!-- Processes -->

	<xs:complexType name="processes">
		<xs:sequence>
			<xs:element name="process" type="addml:process" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="process">
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="reference" type="addml:name" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Reference to unit process whould be run
								on
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="parameter" type="addml:parameter" minOccurs="0"
						maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="definitionReference" type="addml:definitionReference"
					use="required">
					<xs:annotation>
						<xs:documentation>
							Reference to the definition regarding processes for
							dataset
						</xs:documentation>
						<xs:documentation>
							Rules in standard, support by testing-tool, etc. Ex:
							validating documented number of records against read in
							file
						</xs:documentation>
						<xs:documentation>
							Can also be used to link an extraction to different
							testsuites, "this extraction has these processes with this
							testsuite"
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="parameter">
		<xs:annotation>
			<xs:documentation>May be used for input when supported by software</xs:documentation>
			<xs:documentation>
				Ex: field A defines a relative path, and field B defines
				checksum-value of file. Then refer to field A and B by the rules of the
				software.
			</xs:documentation>
			<xs:documentation>Ex: break a testrun if process returns errors</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="addml:unit">
				<xs:sequence>
					<xs:element name="key" type="addml:value"/>
					<xs:element name="value" type="addml:value" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="definitionReference" type="addml:definitionReference"
					use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="valueAsAttribute">
		<xs:attribute name="value" type="addml:defaultDataType"/>
	</xs:complexType>

	<xs:simpleType name="defaultDataType">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="dateDataType">
		<xs:simpleContent >
			<xs:extension base="addml:defaultDataType">
				<xs:attribute name="fieldformat" type="addml:defaultDataType"
					default="YYYY-MM-DD">
					<xs:annotation>
						<xs:documentation>
							By standard, dates is written as
							specified in NS-ISO 8601
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="dialect" type="addml:defaultDataType" default="ISO 8601"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="dateTimeDataType">
		<xs:simpleContent >
			<xs:extension base="addml:defaultDataType">
				<xs:attribute name="fieldformat" type="addml:defaultDataType"
					default="YYYY-MM-DDThh:mm:ss">
					<xs:annotation>
						<xs:documentation>
							By standard, dates is written as
							specified in NS-ISO 8601. F.ex. SQL Server uses 'YYYY-MM-DD hh:mm:ss.SSS', with three positions for millisecond.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="dialect" type="addml:defaultDataType" default="ISO 8601"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:simpleType name="relationDataType">
		<xs:annotation>
			<xs:documentation>List of values defining the relationship between groups</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="1:1">
				<xs:annotation>
					<xs:documentation>One-to-one</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="1:N">
				<xs:annotation>
					<xs:documentation>One-to-many</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="N:1">
				<xs:annotation>
					<xs:documentation>Many-to-one</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="N:M">
				<xs:annotation>
					<xs:documentation>Many-to-many</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="versionDataType">
		<xs:simpleContent>
			<xs:extension base="addml:defaultDataType">
				<xs:attribute name="scheme" default="Semantic">
					<xs:annotation>
						<xs:documentation/>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="addml:defaultDataType">
							<xs:enumeration value="Semantic">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:enumeration>
							<xs:enumeration value="Calendar">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:enumeration>
							<xs:pattern value=".+">
								<xs:annotation>
									<xs:documentation>Other schemes</xs:documentation>
								</xs:annotation>
							</xs:pattern>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="fieldFormat" type="xs:string">
					<xs:annotation>
						<xs:documentation/>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="dialect" default="Semantic">
					<xs:annotation>
						<xs:documentation/>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="addml:defaultDataType">
							<xs:enumeration value="Semantic">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:enumeration>
							<xs:enumeration value="Calendar">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:enumeration>
							<xs:pattern value=".+">
								<xs:annotation>
									<xs:documentation>Other schemes</xs:documentation>
								</xs:annotation>
							</xs:pattern>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="fieldFormat">
		<xs:annotation>
			<xs:documentation>Format according to a specific dialect</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="addml:defaultDataType">
				<xs:attribute name="dialect" type="addml:topic" use="optional">
					<xs:annotation>
						<xs:documentation>Regex, 'Date/time Seven-property Model' or ISO</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

</xs:schema>
